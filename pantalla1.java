/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prueba;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David P
 */
public class pantalla1 extends javax.swing.JFrame {

     Connection con;
    String[] ies= {"SEGEMI","IESCDS","IEJAYG","SELCOL","SERDCR","IELSDC","IEBHER","SESTRI","IECREY","SECRAP","IELPRE","IESANG","IEOCME","IESACU","SEJPII","IERDVE","IESRBE","IEFNUT","SESODN","IERSUA","SEMBEL","IEPOAM","IEDAPE","IEDAB8","SENAMD","IERGCV","IEHMSU","SESPAB","IEJMCE","SELPLA","IEJMBE","IEARIC","IEYYPA","SECFRA","SEGVAL","IEOHJK","SEJIN1","IECDRO","IEADME","SEAJRE","SEYYPA","CELALD","CELFRI","CELMVI","CELSUI","CELPOT","CELAPA","IEHRMB","SEPALM","IEJHBE","IELOMH","SESVFE","IELDCO","SEETIR","IENRSA","IECNOC","CEPBAJ","IEPCAC","IESCRI","IEPJJE","SEJNMO","IEAUOR","SEAUOR","CELPLA","CESCOR","CEEPAT","CETEMO","CEFZOR","CEPALT","CEBOQU","CEEYOL","CESJLM","IEMORT","SESCAF","IEALTA","CEEMAN","CEMPTA","CECMSA","IEFAEL","SEVENT","IEARMO","SELGEA","IEMVWI","SELVER","CEESAL","CEYARU","CEEAST","CEMONT","CEPOTR","CEQLAR","IEMJBE","SEGRIS","IESADP","SEMMMA","SECBBE","IEELIM","IESJOB","SESJOS","IEPRAD","IECORV","IECOMP","CEMLUN","CEEPLA","CEELPL","CEJAPA","CEPGOR","CEECER","CEPMAZ","CEPBLA","IESELE","SERSEL","ESCMAE","VIVSOF","IEMALA","IECARA","SEBHSA","IENSDM","IEJCMU","IEGGMA","SESVDP","IESFDA","IEJDDC","SEFAUR","SEBGIR","IEFHBO","SERPER","SEMDAG","IEALPU","SEJAGU","SESSAN","IELLIB","IELSIE","SEVTUR","IEVPTO","SEHOAN","SESMLC","IELCGS","SENJDP","SECDEN","IESDOR","SEBDIT","IEJVAR","SELGOL","SEADLT","IEEPIN","SEEPIN","IEGRJA","SEJCRE","SELANU","IEADEP","SEAECH","IEMLEV","IELPAS","IEATBS","SELEST","IELMIL","SESTDA","IEMMMA","IEFOZA","IEMJCA","IELGGC","SEMYIS","IEMGMA","SENSDR","SEJMGA","SEEPRI","IEESAL","SEJDSM","IEMLAU","IETULO","IESABE","IECEFA","IEHAGO","SEDLCA","IEJLON","SEASAN","SELAAG","IEADCA","SEDSAL","IEMFSU","SELIGU","SECBRI","SECOVE","IELJVE","SEACOL","IEMDEI","IECCOL","SEJIN2","IELGON","SESLUC","IERUUR","SERUUR","IEFAZE","SEPDCA","IELPIE","IECDME","IEACDM","SEPICH","SECRAM","IEBZNI","IEAMER","SEBETA","IESBAR","SEMPER","SEPXII","IESRDL","SERDPA","SELPRA","IEJXXI","IEPSOC","IECVOR","SEVDJU","SEJDDA","SEMSJA","IEESAN","SEPJGO","IEEVLB","IEEVL1","IELIND","SEAANI","SERDNI","IEFUND","SEESOC","IEBLAN","IEECOR","SEECOR","IEIJFR","SEEJAR","SESDUQ","IEMFCT","SEAFRA","SEEPME","IEFLHB","IEFALA","IEEBOS","IEGVVE","IEDEMI","SEEUBO","IESJIC","SESJUA","IEJCGA","IERCPA","IESDBE","SESDBE","IEJASI","IEMPNG","IEFDBM","IEPAJB","SETOSC","IECLCI","IEJMER","IEMMON","SEMMON","IERDUR","IEDINA","SERUES","IEPCAG","IETRIC","SETRIC","IEMJGO","SEAPIM","IEALCL","SEMKEN","IEMARB","SEIDJA","SEMCAS","IEACAR","IEJNFU","IEMFBO","SEMEPE","IELESP","SERDCU","SESFDP","SELCOM","SESMDP","IECLAM","IEDDOC","SELDGR","IEBSAN","SEEDIS","IEPICA","IEJEGA","IEEPED","SERJME","IEKENN","SECONK","SECKEN","SEEPIC","SEMINE","IEJMVJ","IEPROG","IECJME","SECONT","IESJDL","IEETST","SEETRI","IEAURE","SEAURE","IERABE","IESVDP","SEACAR","IEEDIA","SEEDIA","IEBHOR","IEFYAA","IELLDM","IEJREY","IEFASJ","IECDBO","IEGVCA","SELPOR","IEMROB","SECGON","ITIPBA","IEJROB","IETCN2","IEFAVC","IECMCA","IEVALL","IEBSMA","SESMAR","SEPNOS","IERGHE","IEVFLO","IEBOHE","IEJLCP","SEHLME","SEANCA","IEBSCR","IECIME","SEARGA","IELASU","IERDHO","SEMLRO","IEMUAN","SEGDGI","IEASIG","SEASIG","SELFRO","IEEPLA","IEPANE","IESATE","IEVDSO","SEFIAS","SEREPN","SEVINI","IEFLME","SELFRA","SEJBMO","SELISL","IEMGGC","IEMGC2","IEGRMO","SESBER","IEJRVA","SEBSCA","SEJMMV","IESJBS","IEAMVE","IEMABE","SESJOM","IEJAGA","IERMLO","SEADLC","IEBEOR","IEBOS2","SEBEOR","IEPLVI","SEMFIS","SEVERS","IEEOHE","IESLDA","SESLDA","IEHTAG","SEVGRE","SENSLN","IEFYAC","SEFYA3","SELCSJ","IERLBO","IERLBB","IELNIE","IECTRE","IEJLSE","IEJDCO","IEJMBM","SEPBJA","IECAVA","IEFRMI","SEJUAR","IESJBO","IEAMNA","SESMGO","IEALVE","IESAGU","IEGAAV","SESISI","SETCA1","SECVMA","SESBOL","IEJECA","IELVDS","IEFAP1","SEFAP2","IEFASD","SEFASA","IEMACM","IEFECA","SEDIPR","IEGUAD","SEAMDV","SEGJDB","IESPAB","SEMEDE","SEMFSU","IENHPV","SENHO2","IEFYAG","SEFYAG","IELAVA","IERDBE","IEADSD","SEANDE","SESDSA","SECAAM","IELCAN","SELEN2","IEPEMA","IESNIC","IEFAJM","NNNNNN"};

    /**
     * Creates new form pantalla1
     */
    public pantalla1() {
        initComponents();
        this.getContentPane().setBackground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnlimpiar = new javax.swing.JButton();
        lstdispositivo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmacs = new javax.swing.JTable();
        btnbuscartodo = new javax.swing.JButton();
        btnbuscarmac = new javax.swing.JButton();
        btnbuscarie = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtie = new javax.swing.JTextField();
        txtmac = new javax.swing.JTextField();
        txtpropietario = new javax.swing.JTextField();
        btneliminar = new javax.swing.JButton();
        btnregistrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblnummacs = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnbuscarpropietario = new javax.swing.JButton();
        btnbuscaracro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnlimpiar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnlimpiar.setText("LIMPIAR");
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });

        lstdispositivo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lstdispositivo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Elija una opcion", "PORTATIL", "TV", "TABLET", "CELULAR", "OTROS" }));
        lstdispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lstdispositivoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("IE");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("MAC");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("PROPIETARIO");

        tblmacs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblmacs);

        btnbuscartodo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnbuscartodo.setText("MOSTRAR TODO");
        btnbuscartodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscartodoActionPerformed(evt);
            }
        });

        btnbuscarmac.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnbuscarmac.setText("BUSCAR MAC");
        btnbuscarmac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarmacActionPerformed(evt);
            }
        });

        btnbuscarie.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnbuscarie.setText("BUSCAR IE");
        btnbuscarie.setMaximumSize(new java.awt.Dimension(127, 31));
        btnbuscarie.setMinimumSize(new java.awt.Dimension(127, 31));
        btnbuscarie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarieActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("MACS IE MESA DE AYUDA");

        txtie.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtieFocusGained(evt);
            }
        });
        txtie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtieActionPerformed(evt);
            }
        });

        txtmac.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtmac.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtmacFocusGained(evt);
            }
        });
        txtmac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmacActionPerformed(evt);
            }
        });

        txtpropietario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtpropietario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtpropietarioFocusGained(evt);
            }
        });
        txtpropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpropietarioActionPerformed(evt);
            }
        });

        btneliminar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btneliminar.setText("ELIMINAR MAC");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        btnregistrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnregistrar.setText("REGISTRAR");
        btnregistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregistrarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("DISPOSITIVO");

        lblnummacs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblnummacs.setForeground(new java.awt.Color(255, 0, 51));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/escudo-armas_Alcaldía (1).png"))); // NOI18N

        btnbuscarpropietario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnbuscarpropietario.setText("BUSCAR PROPIETARIO");
        btnbuscarpropietario.setMaximumSize(new java.awt.Dimension(127, 31));
        btnbuscarpropietario.setMinimumSize(new java.awt.Dimension(127, 31));
        btnbuscarpropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarpropietarioActionPerformed(evt);
            }
        });

        btnbuscaracro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnbuscaracro.setText("ACRONIMOS");
        btnbuscaracro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscaracroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblnummacs, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtie, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtmac, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtpropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lstdispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnbuscarpropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnbuscartodo)
                                    .addComponent(btneliminar)
                                    .addComponent(btnlimpiar)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(btnbuscaracro)
                        .addGap(42, 42, 42)
                        .addComponent(btnbuscarmac)
                        .addGap(40, 40, 40)
                        .addComponent(btnbuscarie, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnregistrar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(81, 81, 81))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(97, 97, 97)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(95, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(btnlimpiar)))
                    .addComponent(jLabel6))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnbuscartodo)
                    .addComponent(txtmac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btneliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lstdispositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnbuscarpropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnbuscarie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbuscarmac)
                    .addComponent(btnregistrar)
                    .addComponent(btnbuscaracro))
                .addGap(18, 18, 18)
                .addComponent(lblnummacs, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(328, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void lstdispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lstdispositivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lstdispositivoActionPerformed

    private void btnbuscartodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscartodoActionPerformed
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("IE");
        modelo.addColumn("MAC");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("DISPOSITIVO");
        tblmacs.setModel(modelo);
        String sql="SELECT * FROM macsie ORDER BY `ie` ASC";
        String datos[]=new String[4];

        try {
            //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
            con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
            Statement stmt=con.createStatement();
            ResultSet rs =stmt.executeQuery(sql);
            int i=0;
            while(rs.next()){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                modelo.addRow(datos);
                i++;
            }
            tblmacs.setModel(modelo);
            lblnummacs.setText("EL NUMERO DE MACS REGISTRADAS EN TOTAL ES: "+Integer.toString(i));
        } catch (SQLException ex) {
            Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
        }
    }//GEN-LAST:event_btnbuscartodoActionPerformed

    private void btnbuscarmacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarmacActionPerformed
        lblnummacs.setText("");
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("IE");
        modelo.addColumn("MAC");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("DISPOSITIVO");
        tblmacs.setModel(modelo);
        

        String sql="SELECT * FROM macsie WHERE mac= '"+txtmac.getText()+"'";
        String datos[]=new String[4];
        int i=0;
        if(!"".equals(txtmac.getText())){
        if(txtmac.getText().length()==17)
        {
            try {
                //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                Statement stmt=con.createStatement();
                ResultSet rs =stmt.executeQuery(sql);
                while(rs.next()){
                    datos[0]=rs.getString(1);
                    datos[1]=rs.getString(2);
                    datos[2]=rs.getString(3);
                    datos[3]=rs.getString(4);
                    modelo.addRow(datos);
                    i++;
                }
                lblnummacs.setText("");
                tblmacs.setModel(modelo);
                if(i==0)
                {
                    JOptionPane.showMessageDialog(null,"La MAC no se encuentra");
                    lblnummacs.setText("");
                }
            } catch (SQLException ex) {
                Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"La MAC debe ser de 17 caracteres");
            lblnummacs.setText("");
        }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Ingrese una MAC");
            lblnummacs.setText("");
        }
    }//GEN-LAST:event_btnbuscarmacActionPerformed

    private void btnbuscarieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarieActionPerformed
        
        if(!"".equals(txtie.getText())){
            if(txtie.getText().length()==6){
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.addColumn("IE");
                modelo.addColumn("ACRÓNIMO");
                String sql="SELECT * FROM acronimos WHERE acronimo= '"+txtie.getText()+"'";
                String datos[]=new String[2];
                int i=0;
                try {
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    Statement stmt=con.createStatement();
                    ResultSet rs =stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        modelo.addRow(datos);
                        i++;
                    }
                    if(i==1){
                        DefaultTableModel modelo1 = new DefaultTableModel();
        modelo1.addColumn("IE");
        modelo1.addColumn("MAC");
        modelo1.addColumn("PROPIETARIO");
        modelo1.addColumn("DISPOSITIVO");
        
       String sql1="SELECT * FROM macsie WHERE ie= '"+txtie.getText()+"'";
        String datos1[]=new String[4];
        int i1=0;
                        try {
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                            con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    Statement stmt1=con.createStatement();
                    ResultSet rs1 =stmt1.executeQuery(sql1);
                    while(rs1.next())
                    {
                        datos1[0]=rs1.getString(1);
                        datos1[1]=rs1.getString(2);
                        datos1[2]=rs1.getString(3);
                        datos1[3]=rs1.getString(4);
                        modelo1.addRow(datos1);
                        i1++;
                    }
                    if(i1>0){
                        tblmacs.setModel(modelo1);
                        
                    lblnummacs.setText("EL NUMERO DE MACS REGISTRADAS EN "+txtie.getText().toUpperCase()+" ES: "+Integer.toString(i1));
                    
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"No se encuentra ninguna mac para la IE ingresada");
                        tblmacs.setModel(modelo1);
                        limpiar();
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
                }
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Ingrese un acrónimo de IE válido");
                lblnummacs.setText("");
                limpiar();
                    }
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
                }
            }
            else{
                JOptionPane.showMessageDialog(null,"La IE debe ser de 6 caracteres");
                lblnummacs.setText("");
                limpiar();
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Ingrese una IE");
            lblnummacs.setText("");
            limpiar();
        }
        /*DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("IE");
        modelo.addColumn("MAC");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("DISPOSITIVO");
        tblmacs.setModel(modelo);
        int pare=0;
        int n=0;

        String sql="SELECT * FROM macsie WHERE ie= '"+txtie.getText()+"'";
        String datos[]=new String[4];
        int i=0;
        if(!"".equals(txtie.getText())){
        if(txtie.getText().length()==6)
        {
            while(n <= ies.length)
            {
                if(txtie.getText().equals(ies[n])  && ies[n]!= "NNNNNN")
                {
                    pare=2;
                    break;
                }
                else
                {
                    if(ies[n]!= "NNNNNN")
                    {
                        n++;
                        pare=1;
                    }
                    else
                    {
                        break;
                    }
                }

            }
            if(pare==2)
            {
                try {
                    con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    Statement stmt=con.createStatement();
                    ResultSet rs =stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=rs.getString(3);
                        datos[3]=rs.getString(4);
                        modelo.addRow(datos);
                        i++;
                    }
                    tblmacs.setModel(modelo);
                    lblnummacs.setText("EL NUMERO DE MACS REGISTRADAS EN "+txtie.getText()+" ES: "+Integer.toString(i));
                    limpiar();
                } catch (SQLException ex) {
                    Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Ingrese una IE valida");
                lblnummacs.setText("");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"La IE debe ser de 6 caracteres");
            lblnummacs.setText("");
        }
    }
        else{
            JOptionPane.showMessageDialog(null,"Ingrese una IE");
        }
        */

    }//GEN-LAST:event_btnbuscarieActionPerformed

    private void txtieFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtieFocusGained
        // TODO add your handling code here:
        txtie.setText("");
    }//GEN-LAST:event_txtieFocusGained

    private void txtieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtieActionPerformed

    private void txtmacFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmacFocusGained
        // TODO add your handling code here:
        txtmac.setText("");
    }//GEN-LAST:event_txtmacFocusGained

    private void txtmacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmacActionPerformed

    private void txtpropietarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpropietarioFocusGained
        // TODO add your handling code here:
        txtpropietario.setText("");
    }//GEN-LAST:event_txtpropietarioFocusGained

    private void txtpropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpropietarioActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
       
        DefaultTableModel modelo = new DefaultTableModel();
        DefaultTableModel modelov = new DefaultTableModel();
        modelo.addColumn("IE");
        modelo.addColumn("MAC");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("DISPOSITIVO");
        modelov.addColumn("IE");
        modelov.addColumn("MAC");
        modelov.addColumn("PROPIETARIO");
        modelov.addColumn("DISPOSITIVO");
        tblmacs.setModel(modelo);
        int i=0;
        String datos[]=new String[4];
        String sql="DELETE FROM macsie WHERE mac= '"+txtmac.getText()+"'";
        String sql1="SELECT * FROM macsie WHERE mac= '"+txtmac.getText()+"'";
        if(!"".equals(txtmac.getText())){
        if(txtmac.getText().length()==17){
            try {
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    PreparedStatement stmt=con.prepareStatement(sql);

                    tblmacs.setModel(modelo);

                    Statement stmt1=con.createStatement();
                    ResultSet rs =stmt1.executeQuery(sql1);
                    while(rs.next()){

                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        datos[2]=rs.getString(3);
                        datos[3]=rs.getString(4);
                        modelo.addRow(datos);
                        i++;
                    }
                    if(i>0)
                    {
                        int R= JOptionPane.showConfirmDialog(null,"Desea eliminar la MAC ingresada?","ALERTA",JOptionPane.YES_NO_OPTION,2);

                        if(R==JOptionPane.YES_OPTION)
                        {
                            stmt.executeUpdate(sql);
                            JOptionPane.showMessageDialog(null,"Dato eliminado");
                            lblnummacs.setText("");
                            tblmacs.setModel(modelov);
                            
                            limpiar();
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"Operacion cancelada");
                            lblnummacs.setText("");
                        }
                        
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"La MAC no se encuentra");
                        lblnummacs.setText("");
                        tblmacs.setModel(modelov);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
                }
            
        }
        else
        {
            JOptionPane.showMessageDialog(null,"La MAC debe ser de 17 caracteres");
            lblnummacs.setText("");
        }
        }
        else{
               JOptionPane.showMessageDialog(null,"Ingrese una MAC");
            lblnummacs.setText("");
        }
        
        
        
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnregistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregistrarActionPerformed
        
        DefaultTableModel modelo = new DefaultTableModel();
        DefaultTableModel modelo1 = new DefaultTableModel();
        
        
        modelo1.addColumn("IE");
        modelo1.addColumn("MAC");
        modelo1.addColumn("PROPIETARIO");
        modelo1.addColumn("DISPOSITIVO");
        
        //tblmacs.setModel(modelo);
        int n=0;
        int pare=0;
        int i=0;
        String datos[]=new String[2];
        //String sql="SELECT * FROM macsie WHERE mac= '"+txtmac.getText()+"' AND ie='"+txtie.getText()+"'";

        if((txtie.getText().equals(""))|| (txtmac.getText().equals(""))|| (txtpropietario.getText().equals("")))
        {

            JOptionPane.showMessageDialog(null,"No se permiten campos vacios");
            lblnummacs.setText("");
        }
        else{
            if (lstdispositivo.getSelectedItem()!="Elija una opcion")
            {
                if(txtmac.getText().length()==17){
                if(txtie.getText().length()==6)
                {
                
                modelo.addColumn("IE");
                modelo.addColumn("ACRÓNIMO");
                String sql="SELECT * FROM acronimos WHERE acronimo= '"+txtie.getText()+"'";
                try {
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    Statement stmt=con.createStatement();
                    ResultSet rs =stmt.executeQuery(sql);
                    while(rs.next())
                    {
                        datos[0]=rs.getString(1);
                        datos[1]=rs.getString(2);
                        modelo.addRow(datos);
                        i++;
                    }
                    if(i==1){
                        try
                        {
                            
                            String sql1="SELECT * FROM macsie WHERE mac= '"+txtmac.getText()+"'AND ie='"+txtie.getText()+"'";
                            
        String datos1[]=new String[4];
        int i1=0;
                       
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    Statement stmt1=con.createStatement();
                    ResultSet rs1 =stmt1.executeQuery(sql1);
                    while(rs1.next())
                    {
                        datos1[0]=rs1.getString(1);
                        datos1[1]=rs1.getString(2);
                        datos1[2]=rs1.getString(3);
                        datos1[3]=rs1.getString(4);
                        modelo1.addRow(datos1);
                        i1++;
                    }
                    if(i1>0){
                        
                    
                    JOptionPane.showMessageDialog(null,"La mac ingresada ya se encuentra en esta IE");
                    limpiar();
                    }
                    else{
                        //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                        con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                            Statement stmt3=con.createStatement();
                            stmt3.executeUpdate("INSERT INTO macsie VALUES('"+txtie.getText()+"','"+txtmac.getText()+"','"+txtpropietario.getText()+"','"+lstdispositivo.getSelectedItem()+"')");
                            Statement stmt2=con.createStatement();
                            String sql2="SELECT * FROM macsie WHERE mac= '"+txtmac.getText()+"' AND ie='"+txtie.getText()+"'";
                            ResultSet rs2 =stmt2.executeQuery(sql2);
                            while(rs2.next())
                            {
                                datos1[0]=rs2.getString(1);
                                datos1[1]=rs2.getString(2);
                                datos1[2]=rs2.getString(3);
                                datos1[3]=rs2.getString(4);
                                modelo1.addRow(datos1);
                                i++;
                            }
                            tblmacs.setModel(modelo1);
                            
                            lblnummacs.setText("");
                            JOptionPane.showMessageDialog(null, "MAC ingresada correctamente");
                             txtie.setText("");
        txtmac.setText("");
        txtpropietario.setText("");
        lstdispositivo.setSelectedItem("Elija una opcion");
        lblnummacs.setText("");
                        
                    }
                            
                            
                        }
                        catch (SQLException ex)
                        {
                            Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(null,"No se puede conectar a la base de datos");
                            lblnummacs.setText("");
                        }
                }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Ingrese una IE valida");
                        lblnummacs.setText("");
                    }
                    
                
                }
                catch (SQLException ex)
                        {
                            Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(null,"No se puede conectar a la base de datos");
                            lblnummacs.setText("");
                        }
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"La IE debe ser de 6 caracteres");
                    lblnummacs.setText("");
                }
                
            }
                else{
                    JOptionPane.showMessageDialog(null,"La mac debe ser de 17 caracteres");
                    lblnummacs.setText("");
                }
            
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Seleccione un tipo de dispositivo");
                lblnummacs.setText("");
            }
        }
          
        
    
        
        /*DefaultTableModel modelo = new DefaultTableModel();
        DefaultTableModel modelo1 = new DefaultTableModel();
        modelo.addColumn("IE");
        modelo.addColumn("MAC");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("DISPOSITIVO");
        
        modelo1.addColumn("IE");
        modelo1.addColumn("MAC");
        modelo1.addColumn("PROPIETARIO");
        modelo1.addColumn("DISPOSITIVO");
        
        tblmacs.setModel(modelo);
        int n=0;
        int pare=0;
        int i=0;
        String datos[]=new String[4];
        String sql="SELECT * FROM macsie WHERE mac= '"+txtmac.getText()+"' AND ie='"+txtie.getText()+"'";

        if((txtie.getText().equals(""))|| (txtmac.getText().equals(""))|| (txtpropietario.getText().equals("")))
        {

            JOptionPane.showMessageDialog(null,"No se permiten campos vacios");
            lblnummacs.setText("");
        }
        else{
            if (lstdispositivo.getSelectedItem()!="Elija una opcion")
            {
                if(txtie.getText().length()==6 && txtmac.getText().length()==17)
                {
                    while(n <= ies.length)
                    {
                        if(txtie.getText().equals(ies[n])  && ies[n]!= "NNNNNN")
                        {
                            pare=2;
                            break;
                        }
                        else
                        {
                            if(ies[n]!= "NNNNNN")
                            {
                                n++;
                                pare=1;
                            }
                            else
                            {
                                break;
                            }
                        }

                    }
                    if(pare==2)
                    {
                        try
                        {
                            
                            String sql1="SELECT * FROM macsie WHERE mac= '"+txtmac.getText()+"'AND ie='"+txtie.getText()+"'";
        String datos1[]=new String[4];
        int i1=0;
                       
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    Statement stmt1=con.createStatement();
                    ResultSet rs1 =stmt1.executeQuery(sql1);
                    while(rs1.next())
                    {
                        datos1[0]=rs1.getString(1);
                        datos1[1]=rs1.getString(2);
                        datos1[2]=rs1.getString(3);
                        datos1[3]=rs1.getString(4);
                        modelo1.addRow(datos1);
                        i1++;
                    }
                    if(i1>0){
                        
                    
                    JOptionPane.showMessageDialog(null,"La mac ingresada ya habia sido registrada en esta IE");
                    limpiar();
                    }
                    else{
                        //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                        con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                            Statement stmt=con.createStatement();
                            stmt.executeUpdate("INSERT INTO macsie VALUES('"+txtie.getText()+"','"+txtmac.getText()+"','"+txtpropietario.getText()+"','"+lstdispositivo.getSelectedItem()+"')");
                            Statement stmt2=con.createStatement();
                            ResultSet rs =stmt2.executeQuery(sql);
                            while(rs.next())
                            {
                                datos[0]=rs.getString(1);
                                datos[1]=rs.getString(2);
                                datos[2]=rs.getString(3);
                                datos[3]=rs.getString(4);
                                modelo.addRow(datos);
                                i++;
                            }
                            tblmacs.setModel(modelo);
                            
                            lblnummacs.setText("");
                            JOptionPane.showMessageDialog(null, "MAC ingresada correctamente");
                            limpiar();
                        
                    }
                            
                            
                        }
                        catch (SQLException ex)
                        {
                            Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(null,"No se puede conectar a la base de datos");
                            lblnummacs.setText("");
                        }

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Ingrese una IE valida");
                        lblnummacs.setText("");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"La IE debe ser de 6 caracteres y la mac de 17 caracteres");
                    lblnummacs.setText("");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Seleccione un tipo de dispositivo");
                lblnummacs.setText("");
            }
        }*/
    }//GEN-LAST:event_btnregistrarActionPerformed

    private void btnbuscarpropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarpropietarioActionPerformed
       
        DefaultTableModel modelo = new DefaultTableModel();
        DefaultTableModel modelo1 = new DefaultTableModel();
        
        modelo1.addColumn("IE");
        modelo1.addColumn("ACRONIMO");
        
        modelo.addColumn("IE");
        modelo.addColumn("MAC");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("DISPOSITIVO");
        
        
        tblmacs.setModel(modelo);
        
        
        String sql="SELECT * FROM macsie WHERE ie= '"+txtie.getText()+"' AND propietario LIKE '"+"%"+txtpropietario.getText()+"%"+"'";
        String sql1="SELECT * FROM acronimos WHERE acronimo= '"+txtie.getText()+"'";
        String datos[]=new String[4];
        String datos1[]=new String[2];
        
        int i=0;
        int i1=0;
        if(!"".equals(txtie.getText()) && !"".equals(txtpropietario.getText())){
        
            if(txtie.getText().length()==6)
        {
             try {
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    Statement stmt=con.createStatement();
                    ResultSet rs =stmt.executeQuery(sql1);
                    while(rs.next())
                    {
                        datos1[0]=rs.getString(1);
                        datos1[1]=rs.getString(2);
                        modelo1.addRow(datos1);
                        i++;
                    }
                    if(i==1){
                        try {
                    //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                    con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
                    Statement stmt1=con.createStatement();
                    ResultSet rs1 =stmt1.executeQuery(sql);
                    while(rs1.next())
                    {
                        datos[0]=rs1.getString(1);
                        datos[1]=rs1.getString(2);
                        datos[2]=rs1.getString(3);
                        datos[3]=rs1.getString(4);
                        modelo.addRow(datos);
                        i1++;
                    }
                    if(i1==0){
                        JOptionPane.showMessageDialog(null,"No se encuentra el propietario en la IE ingresada");
                    }
                    tblmacs.setModel(modelo);
                    lblnummacs.setText("");
                    //limpiar();
                } catch (SQLException ex) {
                    Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
                }
                        
                    }
                    else
                        {
                JOptionPane.showMessageDialog(null, "Ingrese un acrónimo de IE válido");
                lblnummacs.setText("");
            }
             }
             catch (SQLException ex) {
                    Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
                }
            
           
        }
        else
        {
            JOptionPane.showMessageDialog(null,"La IE debe ser de 6 caracteres");
            lblnummacs.setText("");
        }
        
        }
        else{
            JOptionPane.showMessageDialog(null,"Ingrese una IE y un propietario");
            lblnummacs.setText("");
        }
    }//GEN-LAST:event_btnbuscarpropietarioActionPerformed

    private void btnbuscaracroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscaracroActionPerformed
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("INSTITUCIÓN EDUCATIVA");
        modelo.addColumn("ACRÓNIMO");
        tblmacs.setModel(modelo);
        
        String datos[]=new String[2];
        if(txtie.getText().equals("")){
            String sql="SELECT * FROM acronimos";
        try {
            //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
            con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
            Statement stmt=con.createStatement();
            ResultSet rs =stmt.executeQuery(sql);
            int i=0;
            while(rs.next()){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                modelo.addRow(datos);
                i++;
            }
            tblmacs.setModel(modelo);
            lblnummacs.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
        }
    }
        else{
            String sql="SELECT * FROM acronimos WHERE ie LIKE '"+"%"+txtie.getText()+"%"+"'";
            try {
            //con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
                con=DriverManager.getConnection("jdbc:mysql://localhost/macsie",Login1.user,Login1.pass);
            Statement stmt=con.createStatement();
            ResultSet rs =stmt.executeQuery(sql);
            int i=0;
            while(rs.next()){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                modelo.addRow(datos);
                i++;
            }
            if(i==0){
                JOptionPane.showMessageDialog(null,"No se encuentra la IE buscada");
            }
            tblmacs.setModel(modelo);
            lblnummacs.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Error de conexion con la base de datos, comuniquese con el administrador");
        }
        }
    }//GEN-LAST:event_btnbuscaracroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pantalla1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pantalla1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pantalla1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pantalla1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pantalla1().setVisible(true);
            }
        });
    }
    void limpiar(){
        txtie.setText("");
        txtmac.setText("");
        txtpropietario.setText("");
        lstdispositivo.setSelectedItem("Elija una opcion");
        lblnummacs.setText("");
        DefaultTableModel modelo = new DefaultTableModel();
        tblmacs.setModel(modelo);
    }
    
   /* void mostrartodo(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("IE");
        modelo.addColumn("MAC");
        modelo.addColumn("PROPIETARIO");
        modelo.addColumn("DISPOSITIVO");
        tblmacs.setModel(modelo);
        String sql="SELECT * FROM macsie ORDER BY `ie` ASC";
        String datos[]=new String[4];
        
        try {
            con=DriverManager.getConnection("jdbc:mysql://172.16.197.240/macsie",Login1.user,Login1.pass);
            Statement stmt=con.createStatement();
            ResultSet rs =stmt.executeQuery(sql);
            int i=0;
            while(rs.next()){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                modelo.addRow(datos);
                i++;
            }
            tblmacs.setModel(modelo);
            lblnummacs.setText("el numero de macs registradas es: "+Integer.toString(i));
        } catch (SQLException ex) {
            Logger.getLogger(pantalla1.class.getName()).log(Level.SEVERE, null, ex);
        }
}*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbuscaracro;
    private javax.swing.JButton btnbuscarie;
    private javax.swing.JButton btnbuscarmac;
    private javax.swing.JButton btnbuscarpropietario;
    private javax.swing.JButton btnbuscartodo;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JButton btnregistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblnummacs;
    private javax.swing.JComboBox lstdispositivo;
    private javax.swing.JTable tblmacs;
    private javax.swing.JTextField txtie;
    private javax.swing.JTextField txtmac;
    private javax.swing.JTextField txtpropietario;
    // End of variables declaration//GEN-END:variables
}
